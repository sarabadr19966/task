[{"D:\\sara-badr-task\\sara-badr-valify-task\\src\\index.js":"1","D:\\sara-badr-task\\sara-badr-valify-task\\src\\reportWebVitals.js":"2","D:\\sara-badr-task\\sara-badr-valify-task\\src\\App.js":"3","D:\\sara-badr-task\\sara-badr-valify-task\\src\\components\\NationalID.js":"4","D:\\sara-badr-task\\sara-badr-valify-task\\src\\components\\nationalID.js":"5","D:\\sara-badr-task\\sara-badr-valify-task\\src\\components\\clientInformation.js":"6","D:\\sara-badr-task\\sara-badr-valify-task\\src\\components\\accountCreation.js":"7","D:\\sara-badr-task\\sara-badr-valify-task\\src\\container\\BankAccount.js":"8","D:\\sara-badr-task\\sara-badr-valify-task\\src\\components\\errorComponent.js":"9","D:\\sara-badr-task\\sara-badr-valify-task\\src\\components\\Controller.js":"10","D:\\sara-badr-task\\sara-badr-valify-task\\src\\theme.js":"11","D:\\sara-badr-task\\sara-badr-valify-task\\src\\components\\stepper.js":"12","D:\\sara-badr-task\\sara-badr-valify-task\\src\\container\\TakePicture.js":"13"},{"size":645,"mtime":1609940798765,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1267,"mtime":1610002351873,"results":"17","hashOfConfig":"15"},{"size":894,"mtime":1609538283440,"results":"18","hashOfConfig":"15"},{"size":3237,"mtime":1610003404260,"results":"19","hashOfConfig":"15"},{"size":4856,"mtime":1610004330682,"results":"20","hashOfConfig":"15"},{"size":1642,"mtime":1610003956197,"results":"21","hashOfConfig":"15"},{"size":6566,"mtime":1610004206310,"results":"22","hashOfConfig":"15"},{"size":1281,"mtime":1610003178209,"results":"23","hashOfConfig":"15"},{"size":1696,"mtime":1610007390301,"results":"24","hashOfConfig":"15"},{"size":252,"mtime":1609996815120,"results":"25","hashOfConfig":"15"},{"size":2632,"mtime":1610003402279,"results":"26","hashOfConfig":"15"},{"size":4177,"mtime":1610004259517,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1rd7d5p",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},"D:\\sara-badr-task\\sara-badr-valify-task\\src\\index.js",[],["56","57"],"D:\\sara-badr-task\\sara-badr-valify-task\\src\\reportWebVitals.js",[],"D:\\sara-badr-task\\sara-badr-valify-task\\src\\App.js",[],"D:\\sara-badr-task\\sara-badr-valify-task\\src\\components\\NationalID.js",[],"D:\\sara-badr-task\\sara-badr-valify-task\\src\\components\\nationalID.js",[],"D:\\sara-badr-task\\sara-badr-valify-task\\src\\components\\clientInformation.js",[],"D:\\sara-badr-task\\sara-badr-valify-task\\src\\components\\accountCreation.js",[],"D:\\sara-badr-task\\sara-badr-valify-task\\src\\container\\BankAccount.js",[],"D:\\sara-badr-task\\sara-badr-valify-task\\src\\components\\errorComponent.js",[],"D:\\sara-badr-task\\sara-badr-valify-task\\src\\components\\Controller.js",[],"D:\\sara-badr-task\\sara-badr-valify-task\\src\\theme.js",[],"D:\\sara-badr-task\\sara-badr-valify-task\\src\\components\\stepper.js",[],"D:\\sara-badr-task\\sara-badr-valify-task\\src\\container\\TakePicture.js",["58","59","60"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport Webcam from 'webcam-easy';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CameraIcon from '@material-ui/icons/Camera';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    videoCanvas :{\r\n        width:400,\r\n        height:300,\r\n        marginTop:'30px',\r\n        border : '4px solid',\r\n        borderRadius : '5px',\r\n        borderColor : theme.palette.secondary.light,\r\n        [theme.breakpoints.down('xs')]:{\r\n            width:350,\r\n            height : 262.5\r\n        }\r\n    },\r\n    switch : {}\r\n\r\n}));\r\n\r\n //accessing webcam\r\n\r\nconst TakePicture = (props) => {\r\n    const classes = useStyles();\r\n    const [isWebCamOn ,setisWebCamOn] = useState(false);\r\n    const [notCaptured ,setNotCaptured] = useState(true);\r\n    const webCamRef = useRef(null);\r\n    const imageSnapShot = useRef(null);\r\n    \r\n    useEffect(() => {\r\n        // if photo captured to remove disable from send button\r\n        props.capture(true);\r\n        const webcamElement = document.getElementById('webcam');\r\n        const canvasElement = document.getElementById('canvas');\r\n        webCamRef.current = new Webcam(webcamElement, 'user', canvasElement);\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        if (webCamRef.current && isWebCamOn) {\r\n            webCamRef.current.start()\r\n        } else if (webCamRef.current && !isWebCamOn) {\r\n            webCamRef.current.stop()\r\n        }\r\n    }, [isWebCamOn]);\r\n\r\n    //switch camera on and off\r\n    const handleOnOffCamera = () => {\r\n        setisWebCamOn(!isWebCamOn);\r\n    }\r\n\r\n    // check if image captured\r\n    const handleOnCaptureClick = () => {\r\n        let picture = webCamRef.current.snap();\r\n        imageSnapShot.current.href = picture ? picture : '';\r\n        setNotCaptured(!notCaptured);\r\n    }\r\n    \r\n   \r\n    // take another photo\r\n    const handleTakeAnotherClick = () => {\r\n        setNotCaptured(true)\r\n        setisWebCamOn(true)\r\n        props.capture(true);\r\n    }\r\n\r\n    // done click\r\n    const handleOnDoneClick = () =>{\r\n        setisWebCamOn(false);\r\n        props.capture(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FormControlLabel color = 'primary'\r\n                control = {<Switch checked = {isWebCamOn} onChange = {handleOnOffCamera} name = \"turnCameraOnOff\" color = 'primary' />}\r\n                label = \"Camera\"\r\n            />\r\n\r\n            <div>\r\n                <video id = \"webcam\" autoPlay playsInline className = {classes.videoCanvas}  \r\n                    {...((!isWebCamOn || !notCaptured) && {style: {display: 'none'}})}>\r\n                \r\n                </video>\r\n                <canvas id = \"canvas\" className = {classes.videoCanvas}  \r\n                    {...(notCaptured  && {style: {display: 'none'}})}>\r\n                </canvas>\r\n            </div>\r\n            {\r\n                isWebCamOn  || !notCaptured ? (\r\n                    <div>\r\n                    <IconButton disabled = {notCaptured} onClick = {handleTakeAnotherClick} color = \"primary\" \r\n                    aria-label = \"upload picture\" component = \"span\">\r\n                        <RedoIcon />\r\n                    </IconButton>\r\n                    <IconButton disabled = {!notCaptured} onClick = {handleOnCaptureClick} color = \"primary\"\r\n                     aria-label = \"upload picture\" component = \"span\">\r\n                        <CameraIcon />\r\n                    </IconButton>\r\n                    <IconButton disabled = {notCaptured} onClick = {handleOnDoneClick} color = \"primary\" \r\n                    aria-label = \"upload picture\" component=\"span\">\r\n                        <DoneIcon />\r\n                    </IconButton>\r\n                    \r\n                    </div>\r\n                ) : null\r\n            }\r\n            <a id = \"dowload-photo\" href = '' ref = {imageSnapShot}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TakePicture;",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":43,"column":8,"nodeType":"67","endLine":43,"endColumn":10,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":115,"column":13,"nodeType":"71","endLine":115,"endColumn":70},{"ruleId":"72","severity":1,"message":"73","line":115,"column":13,"nodeType":"71","endLine":115,"endColumn":70},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["76"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [props]",{"range":"79","text":"80"},[1493,1495],"[props]"]